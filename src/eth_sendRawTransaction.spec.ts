import { test } from "bun:test";
import assert from "node:assert";
import { eth_sendRawTransaction } from "./eth_sendRawTransaction.js"
import { PrivateKey } from "@wharfkit/session";
import { createSession } from "./createSession.js";

// start the miner
const session = createSession({
    actor: "miner.enf",
    privateKey: PrivateKey.generate("K1").toString(),
})

const rplxs = [
    ["0xf9016d3a8534630b8a008302a56d941c8f68e8adbd75c23281e5c88e44d0b7023a423880b9010418cbafe5000000000000000000000000000000000000000000000000000000000004eb860000000000000000000000000000000000000000000000000696461c6fd44b5400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000b6bd7e6222b524c2d3bdd7eccb198ccfbc5880a00000000000000000000000000000000000000000000000000000000648783570000000000000000000000000000000000000000000000000000000000000002000000000000000000000000fa9343c3897324496a05fc75abed6bac29f8a40f000000000000000000000000c00592aa41d32d137dc480d9f6d0df19b860104f828b06a014778f2186e66ce06c656c1c8233628e51e5da28c26ff2bf919bc188acadf5cba030c57201adef3c9305b9ecf48ed3433c62e145b74e2da3a58ef0396a368c401d","0x4fe79b3a1e9f7b120399c05fca41dda1cae8412caa1d081e37217d1c2f9e42af"],
    ["0xf9015682042c8522ecb25c0083033450941c8f68e8adbd75c23281e5c88e44d0b7023a4238881b1f9ca5fb325000b8e47ff36ab5000000000000000000000000000000000000000000000000000000000013d1a6000000000000000000000000000000000000000000000000000000000000008000000000000000000000000058836a592b25659733ecee0dbe313807f13cd45100000000000000000000000000000000000000000000000000000000648783e20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c00592aa41d32d137dc480d9f6d0df19b860104f000000000000000000000000765277eebeca2e31912c9946eae1021199b39c61828b05a0de31deca0d4a21353cfc9320e719fe90553cfa5ddb65739579747044521a46aaa05ae417b2411079269e441ac449ce47d780bf98f7f6392725805f95df6e9f5c1d", "0x99f315915ce41fb2446fd300662ff00368e558edca67461659e29fdb64eede23"],
    ["0xf9015682042c8522ecb25c0083033450941c8f68e8adbd75c23281e5c88e44d0b7023a4238881b1f9ca5fb325000b8e47ff36ab5000000000000000000000000000000000000000000000000000000000013d1a6000000000000000000000000000000000000000000000000000000000000008000000000000000000000000058836a592b25659733ecee0dbe313807f13cd45100000000000000000000000000000000000000000000000000000000648783e20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c00592aa41d32d137dc480d9f6d0df19b860104f000000000000000000000000765277eebeca2e31912c9946eae1021199b39c61828b05a0de31deca0d4a21353cfc9320e719fe90553cfa5ddb65739579747044521a46aaa05ae417b2411079269e441ac449ce47d780bf98f7f6392725805f95df6e9f5c1d", "0x99f315915ce41fb2446fd300662ff00368e558edca67461659e29fdb64eede23"],
]

test('eth_sendRawTransaction', async () => {
    for ( const [rlptx, expected] of rplxs ) {
        const params = [ rlptx, "latest" ];
        const result = await eth_sendRawTransaction(session, params, false);
        assert.equal(result, expected);
    }
});
